name: Deploy

on:
  workflow_dispatch:
    inputs:
      run-id:
        type: number
        description: Deploy artifact from run ID (optional)
      skip-development:
        type: boolean
        description: Skip development environment
      skip-staging:
        type: boolean
        description: Skip staging environment

jobs:
  meta:
    name: Get metadata
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.resolve.outputs.version }}
      type: ${{ steps.resolve.outputs.type }}
      artifact: ${{ steps.resolve.outputs.artifact }}
      id: ${{ steps.resolve.outputs.id }}
    steps:
      - name: Resolve
        id: resolve
        run: |
          VERSION="$(basename "$GITHUB_REF")"

          case "$GITHUB_REF" in
            "refs/tags/"*|"refs/heads/release/"*)
              TYPE=release
              ;;
            *)
              TYPE=dev
              ;;
          esac

          ARTIFACT="$TYPE-$VERSION"
          ID="$ARTIFACT-$GITHUB_RUN_ID-$GITHUB_RUN_ATTEMPT"

          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "type=$TYPE" >> "$GITHUB_OUTPUT"
          echo "artifact=$ARTIFACT" >> "$GITHUB_OUTPUT"
          echo "id=$ID" >> "$GITHUB_OUTPUT"

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: meta

    steps:

      - name: Checkout
        uses: actions/checkout@v3
        if: ${{ !inputs.run-id }}

      - name: Build artifact
        run: mkdir -p build && touch build/index
        if: ${{ !inputs.run-id }}

      - name: Package artifact
        run: tar czf build.tar.gz build && mkdir -p artifact && mv build.tar.gz artifact/
        if: ${{ !inputs.run-id }}

      - name: Check artifact from previous run
        uses: actions/download-artifact@v5
        with:
          name: ${{ needs.meta.outputs.artifact }}
          path: artifact
          run-id: ${{ inputs.run-id }}
          github-token: ${{ github.token }}
        if: ${{ !!inputs.run-id }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.meta.outputs.artifact }}
          path: artifact
          if-no-files-found: error
          include-hidden-files: true
        if: ${{ !inputs.run-id }}

  deploy-development:
    name: Deploy to development
    runs-on: ubuntu-latest
    environment: development
    needs: [meta, build]
    if: ${{ needs.meta.outputs.type == 'dev' && !inputs.skip-development }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v5
        with:
          name: ${{ needs.meta.outputs.artifact }}
          path: artifact
        if: ${{ !inputs.run-id }}

      - name: Fetch artifact from previous run
        uses: actions/download-artifact@v5
        with:
          name: ${{ needs.meta.outputs.artifact }}
          path: artifact
          run-id: ${{ inputs.run-id }}
          github-token: ${{ github.token }}
        if: ${{ !!inputs.run-id }}

      - name: Deploy artifact
        run: ls -R

  deploy-staging:
    name: Deploy to staging
    needs: [meta, build]
    if: ${{ needs.meta.outputs.type == 'release' && !inputs.skip-staging }}
    uses: ./.github/workflows/reusable-deploy-to-environment.yml
    with:
      run-id: ${{ inputs.run-id }}
      artifact: ${{ needs.meta.outputs.artifact }}
      environment: staging
    secrets: inherit

  deploy-production:
    name: Deploy to production
    runs-on: ubuntu-latest
    environment: production
    needs: [meta, build, deploy-staging]
    if: ${{ always() && !failure() && !cancelled() && needs.meta.outputs.type == 'release' }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v5
        with:
          name: ${{ needs.meta.outputs.artifact }}
          path: artifact
        if: ${{ !inputs.run-id }}

      - name: Fetch artifact from previous run
        uses: actions/download-artifact@v5
        with:
          name: ${{ needs.meta.outputs.artifact }}
          path: artifact
          run-id: ${{ inputs.run-id }}
          github-token: ${{ github.token }}
        if: ${{ !!inputs.run-id }}

      - name: Deploy artifact
        run: ls -R
