name: Deploy

on:
  workflow_dispatch:
    inputs:
      run:
        type: number
        description: Deploy artifact from run ID (optional)
      skip-development:
        type: boolean
        description: Skip development environment
      skip-staging:
        type: boolean
        description: Skip staging environment

jobs:
  meta:
    name: Get metadata
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.resolve.outputs.version }}
      type: ${{ steps.resolve.outputs.type }}
    steps:
      - name: Resolve
        id: resolve
        run: |
          echo "version=$(basename "$GITHUB_REF")" >> "$GITHUB_OUTPUT"

          case "$GITHUB_REF" in
            "refs/tags/"*|"refs/heads/release/"*)
              echo "type=release" >> "$GITHUB_OUTPUT"
              ;;
            *)
              echo "type=development" >> "$GITHUB_OUTPUT"
              ;;
          esac

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: meta

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Build ${{ needs.meta.outputs.version }}
        run: mkdir -p build && touch build/index
        if: ${{ !inputs.run }}

      - name: Fetch artifact
        uses: actions/download-artifact@v5
        with:
          run-id: ${{ inputs.run }}
        if: ${{ !!inputs.run }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build
          if-no-files-found: warn
          include-hidden-files: true

  deploy-development:
    name: Deploy to development
    runs-on: ubuntu-latest
    environment: development
    needs: [meta, build]
    if: ${{ needs.meta.outputs.type == 'development' && !inputs.skip-development }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v5

      - name: Deploy artifact
        run: ls -R

  deploy-staging:
    name: Deploy to staging
    runs-on: ubuntu-latest
    environment: staging
    needs: [meta, build]
    if: ${{ needs.meta.outputs.type == 'release' && !inputs.skip-staging }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v5

      - name: Deploy artifact
        run: ls -R

  deploy-production:
    name: Deploy to production
    runs-on: ubuntu-latest
    environment: production
    needs: [meta, build, deploy-staging]
    #if: ${{ needs.meta.outputs.type == 'release' }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v5

      - name: Deploy artifact
        run: ls -R
